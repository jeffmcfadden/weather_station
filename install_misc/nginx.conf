# nginx config file.
# put this in /etc/nginx/conf.d/weather_station.conf
upstream app {
    # Path to SOCK file, as defined previously
    server unix://www/weather_station/shared/puma.weather_station.sock fail_timeout=0;
}

server {

    # SSL configuration

    listen 80 default_server;
    listen [::]:80 default_server;
    
    
    server_name localhost;

    # Application root, as defined previously
    root /www/weather_station/current/public;

    try_files $uri/index.html $uri @app;

    if (-f /www/weather_station/maintenance/maintenance_on.txt) {
      return 503;
    }

    error_page 503 @maintenance;

    location @maintenance {
      rewrite ^(.*)$ /maintenance.html break;
    }
    
    error_page 429 @throttle;
    location @throttle {
      rewrite ^(.*)$ /429.html break;
    }

    location ~ /.well-known {
        allow all;
    }

    location ~ ^/(assets)/  {
       root /www/weather_station/current/public;
       gzip_static on; # to serve pre-gzipped version
       gzip_http_version 1.0;
       expires max;
       add_header Cache-Control public;
       access_log /var/log/nginx/weather_station.access;


        if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' '*';

          #
          # Om nom nom cookies
          #

          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

          #
          # Custom headers and headers various browsers *should* be OK with but aren't
          #

          add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

          #
          # Tell client that this pre-flight info is valid for 20 days
          #

          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain charset=UTF-8';
          add_header 'Content-Length' 0;

          return 204;
        }

        if ($request_method = 'POST') {

          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

        }

        if ($request_method = 'GET') {

          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

        }

    }

    location @app {
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://app;
        
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_set_header  X-Forwarded-Ssl on; # Optional
        proxy_set_header  X-Forwarded-Port $server_port;
        proxy_set_header  X-Forwarded-Host $host;
    }

    #error_page 503 /maintenance_on.html;
    #location /maintenance_on.html {
    #    root /www/Lightstock/maintenance/;
    #}

    error_page 500 502 503 504 /500.html;
    client_max_body_size 4G;
    keepalive_timeout 10;

    access_log /var/log/nginx/weather_station.access;
    error_log  /var/log/nginx/weather_station.error error;
}